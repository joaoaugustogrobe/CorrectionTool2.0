version: '3.7'
services:
  spa:
    build:
      context: "./env/dev/spa"
    ports:
      - "${VUE_UI_PORT:-8090}:8000"
      - "${SPA_APP_PORT:-8091}:8080"
      - '3000:3000'
    volumes:
      - ./spa:/var/spa:${CACHING_OPTION:-cached}
      - ./env/prod/spa/dist:/var/spa/dist
    stdin_open: true
    tty: true
    environment:
      - CHOKIDAR_USEPOLLING=true
    working_dir: /var/spa
    command: "vue ui -H 0.0.0.0 -p 8000"

  api:
    container_name: 'api'
    build:
      context: "./env/dev/api"
    ports:
      - "${API_PORT:-8092}:3333"
    volumes:
      - type: bind
        source: ./api
        target: /var/www
      - type: bind
        source: ./api/uploads
        target: /usr/local/Exercicios
    environment:
      QUEUE_HOST: rabbitmq
      NODE_ENV: development
      DB_USERNAME: "${MONGO_INITDB_ROOT_USERNAME:-root}"
      DB_PASSWORD: "${MONGO_INITDB_ROOT_PASSWORD:-example}"
      DB_DATABASE: "${MONGO_INITDB_DATABASE:-correctiontool}"
      DB_HOST: mongo
      DB_PORT: 27017
      RABBITMQ_USERNAME: "${RABBITMQ_USERNAME:-root}"
      RABBITMQ_PASSWORD: "${RABBITMQ_PASSWORD:-example}"
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: ${RABBITMQ_PORT:-5672}
      API_ADMIN_EMAIL: ${API_ADMIN_EMAIL:-admin@joaocastilho.com.br}
      API_ADMIN_PASSWORD: ${API_ADMIN_PASSWORD:-example}
    working_dir: /var/www
    command: "npm run dev"
    restart: always
    depends_on:
      - rabbitmq
    networks:
      - default
      - localbridge
    
  corretor:
    build:
      context: "./env/dev/corretor"
    depends_on:
      - api
    volumes:
      - type: bind
        source: ./corretor
        target: /var/www
      - type: bind
        source: ./corretor/temp
        target: /usr/local/Exercicios
    # working_dir: /var/www
    command: "npm run dev"
    restart: always
    environment:
      RABBITMQ_USERNAME: "${RABBITMQ_USERNAME:-root}"
      RABBITMQ_PASSWORD: "${RABBITMQ_PASSWORD:-example}"
      RABBITMQ_HOST: ${RABBITMQ_HOST:-p_rabbitmq}
      RABBITMQ_PORT: ${RABBITMQ_PORT:-5672}
      SERVER_BASE_URL: "${SERVER_BASE_URL:-joaocastilho.com.br/api}"
      API_ADMIN_EMAIL: ${API_ADMIN_EMAIL:-admin@joaocastilho.com.br}
      API_ADMIN_PASSWORD: ${API_ADMIN_PASSWORD:-example}
    networks:
      - default
      - localbridge

  mongo:
    #image: mongo
    build: ./env/dev/mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${MONGO_INITDB_ROOT_USERNAME:-root}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGO_INITDB_ROOT_PASSWORD:-example}"
      MONGO_INITDB_DATABASE: "${MONGO_INITDB_DATABASE:-correctiontool}"
    volumes:
      - type: bind
        source: ./env/prod/mongo/mongo-init.js
        target: /docker-entrypoint-initdb.d/mongo-init.js
      - dev_mongodata:/data/db #Helps to store MongoDB data in `./mongo/data`
    ports:
      - 27017:27017

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8094:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: "${MONGO_INITDB_ROOT_USERNAME:-root}"
      ME_CONFIG_MONGODB_ADMINPASSWORD: "${MONGO_INITDB_ROOT_PASSWORD:-example}"
    depends_on:
      - mongo


  mail:
    image: bytemark/smtp
    restart: always
    environment:
      RELAY_HOST: smtp.joaocastilho.com.br
      RELAY_PORT: 587
      RELAY_USERNAME: noreply@joaocastilho.com.br
      RELAY_PASSWORD: /lo@der.js:1085:14

  rabbitmq:
    image: rabbitmq:3-management
    container_name: 'rabbitmq'
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      RABBITMQ_DEFAULT_USER: "${RABBITMQ_USERNAME:-root}"
      RABBITMQ_DEFAULT_PASS: "${RABBITMQ_PASSWORD:-example}"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/
      - rabbitmq_log:/var/log/rabbitmq/
    networks:
      - rabbitmq_go_net
      - default

volumes:
  dev_mongodata:
  rabbitmq_data:
  rabbitmq_log:

networks:
  rabbitmq_go_net:
    driver: bridge
  localbridge:
    driver: bridge